<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="woojooin.planitbatch.domain.mapper.DepositTaxSavingMapper">

    <!-- 예적금 세금 절약 내역 ResultMap -->
    <resultMap id="DepositTaxSavingResultMap" type="woojooin.planitbatch.domain.vo.DepositTaxSavingVO">
        <id property="id" column="id"/>
        <result property="memberId" column="member_id"/>
        <result property="accountId" column="account_id"/>
        <result property="quarter" column="quarter"/>
        <result property="interestIncome" column="interest_income"/>
        <result property="incomeTax" column="income_tax"/>
        <result property="localIncomeTax" column="local_income_tax"/>
        <result property="totalTax" column="total_tax"/>
        <result property="netIncome" column="net_income"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <!-- 예적금 세금 절약 내역 저장 -->
    <insert id="insertDepositTaxSaving" parameterType="woojooin.planitbatch.domain.vo.DepositTaxSavingVO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO deposit_tax_saving_history (
            member_id,
            account_id,
            quarter,
            interest_income,
            income_tax,
            local_income_tax,
            total_tax,
            net_income,
            created_at
        ) VALUES (
            #{memberId},
            #{accountId},
            #{quarter},
            #{interestIncome},
            #{incomeTax},
            #{localIncomeTax},
            #{totalTax},
            #{netIncome},
            #{createdAt}
        )
    </insert>

    <!-- UPSERT: 한 번의 쿼리로 INSERT 또는 UPDATE 처리 -->
    <insert id="upsertDepositTaxSaving" parameterType="woojooin.planitbatch.domain.vo.DepositTaxSavingVO">
        INSERT INTO deposit_tax_saving_history (
            member_id,
            account_id,
            quarter,
            interest_income,
            income_tax,
            local_income_tax,
            total_tax,
            net_income,
            created_at
        ) VALUES (
            #{memberId},
            #{accountId},
            #{quarter},
            #{interestIncome},
            #{incomeTax},
            #{localIncomeTax},
            #{totalTax},
            #{netIncome},
            #{createdAt}
        )
        ON DUPLICATE KEY UPDATE
            interest_income = VALUES(interest_income),
            income_tax = VALUES(income_tax),
            local_income_tax = VALUES(local_income_tax),
            total_tax = VALUES(total_tax),
            net_income = VALUES(net_income),
            created_at = VALUES(created_at)
    </insert>

    <!-- 배치 UPSERT: 여러 개의 데이터를 한 번의 쿼리로 처리 (최고 성능) -->
    <insert id="batchUpsertDepositTaxSaving" parameterType="list">
        INSERT INTO deposit_tax_saving_history (
            member_id,
            account_id,
            quarter,
            interest_income,
            income_tax,
            local_income_tax,
            total_tax,
            net_income,
            created_at
        ) VALUES
        <foreach collection="list" item="item" separator=",">
        (
            #{item.memberId},
            #{item.accountId},
            #{item.quarter},
            #{item.interestIncome},
            #{item.incomeTax},
            #{item.localIncomeTax},
            #{item.totalTax},
            #{item.netIncome},
            #{item.createdAt}
        )
        </foreach>
        ON DUPLICATE KEY UPDATE
            interest_income = VALUES(interest_income),
            income_tax = VALUES(income_tax),
            local_income_tax = VALUES(local_income_tax),
            total_tax = VALUES(total_tax),
            net_income = VALUES(net_income),
            created_at = VALUES(created_at)
    </insert>

    <!-- 회원별 예적금 세금 절약 내역 조회 -->
    <select id="findByMemberId" resultMap="DepositTaxSavingResultMap">
        SELECT 
            id,
            member_id,
            account_id,
            quarter,
            interest_income,
            income_tax,
            local_income_tax,
            total_tax,
            net_income,
            created_at
        FROM deposit_tax_saving_history
        WHERE member_id = #{memberId}
        ORDER BY created_at DESC
    </select>

    <!-- 계좌별 예적금 세금 절약 내역 조회 -->
    <select id="findByAccountId" resultMap="DepositTaxSavingResultMap">
        SELECT 
            id,
            member_id,
            account_id,
            quarter,
            interest_income,
            income_tax,
            local_income_tax,
            total_tax,
            net_income,
            created_at
        FROM deposit_tax_saving_history
        WHERE account_id = #{accountId}
        ORDER BY created_at DESC
    </select>

    <!-- 분기별 예적금 세금 절약 내역 조회 -->
    <select id="findByQuarter" resultMap="DepositTaxSavingResultMap">
        SELECT 
            id,
            member_id,
            account_id,
            quarter,
            interest_income,
            income_tax,
            local_income_tax,
            total_tax,
            net_income,
            created_at
        FROM deposit_tax_saving_history
        WHERE quarter = #{quarter}
        ORDER BY created_at DESC
    </select>

    <!-- 회원과 분기로 예적금 세금 절약 내역 조회 -->
    <select id="findByMemberIdAndQuarter" resultMap="DepositTaxSavingResultMap">
        SELECT 
            id,
            member_id,
            account_id,
            quarter,
            interest_income,
            income_tax,
            local_income_tax,
            total_tax,
            net_income,
            created_at
        FROM deposit_tax_saving_history
        WHERE member_id = #{memberId} AND quarter = #{quarter}
        ORDER BY created_at DESC
        LIMIT 1
    </select>

    <!-- 예적금 세금 절약 내역 업데이트 -->
    <update id="updateDepositTaxSaving" parameterType="woojooin.planitbatch.domain.vo.DepositTaxSavingVO">
        UPDATE deposit_tax_saving_history SET
            interest_income = #{interestIncome},
            income_tax = #{incomeTax},
            local_income_tax = #{localIncomeTax},
            total_tax = #{totalTax},
            net_income = #{netIncome},
            created_at = #{createdAt}
        WHERE member_id = #{memberId} 
          AND account_id = #{accountId} 
          AND quarter = #{quarter}
    </update>

    <!-- 중복 데이터 개수 확인 -->
    <select id="countByMemberIdAndAccountIdAndQuarter" resultType="int">
        SELECT COUNT(*)
        FROM deposit_tax_saving_history
        WHERE member_id = #{memberId} 
          AND account_id = #{accountId} 
          AND quarter = #{quarter}
    </select>

</mapper>